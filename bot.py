import uvicorn
import os
import asyncio
from telegram import (
    Update,
    BotCommand,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardMarkup
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters
)

import database  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å —Ñ–∞–π–ª database.py

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
ADMIN_ID = os.getenv("ADMIN_ID")
BOT_TOKEN = os.getenv("BOT_TOKEN")

# === –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç ===
def load_welcome_text(username):
    try:
        with open('welcome.html', 'r', encoding='utf-8') as file:
            text = file.read()
            return text.replace('@{username}', f'@{username}')
    except FileNotFoundError:
        return f"üëã –ü—Ä–∏–≤–µ—Ç, @{username}!\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç."


# === –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–∑ —Ñ–∞–π–ª–∞ welcome.html + –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ + –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    user = update.effective_user
    user_id = str(user.id)
    username = user.username or "unknown"

    existing_user = database.get_user(user_id)

    if not existing_user:
        referred_by = context.args[0] if context.args else None

        database.add_user(user_id, username, referred_by)

        if referred_by:
            try:
                await context.bot.send_message(
                    chat_id=referred_by,
                    text=f"üéâ –ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî @{username}!"
                )
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞] –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ {referred_by}: {e}")

    # === –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç ===
    welcome_text = load_welcome_text(username)

    # === –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–º ===
    keyboard = [
        [
            InlineKeyboardButton("üìπ –ü–ï–†–ï–ô–¢–ò ->", url="https://sovkomprohalva.ru"), 
            InlineKeyboardButton("üí¨ –ù–ê–® –ß–∞—Ç", url="https://t.me/+Yaq7IZdTEWA3OWIy") 
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # === –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏ ===
    try:
        await update.message.reply_text(welcome_text, reply_markup=reply_markup, parse_mode='HTML')
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å HTML-—Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        await update.message.reply_text(
            f"üëã –ü—Ä–∏–≤–µ—Ç, @{username}!\n\n"
            "–ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è –≤–∞—Å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ —á–∞—Ç—É.",
            reply_markup=reply_markup
        )

    # === –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–Ω–∏–∑—É (—Ä–∞–∑–Ω–∞—è –¥–ª—è –∞–¥–º–∏–Ω–∞ –∏ –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π) ===
    current_admin_id = ADMIN_ID

    if user_id == current_admin_id:
        menu_keyboard = [
            [KeyboardButton("üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞"), KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton("üèÜ –¢–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤"), KeyboardButton("üåê –ü–ï–†–ï–ô–¢–ò")]
        ]
    else:
        menu_keyboard = [
            [KeyboardButton("üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞"), KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton("üåê –ü–ï–†–ï–ô–¢–ò")]
        ]

    menu_reply_markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)

    # === –°–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é ===
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:",
        reply_markup=menu_reply_markup
    )


# === –ö–æ–º–∞–Ω–¥–∞ /mylink ===
async def my_link(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    """
    user = update.effective_user
    user_id = user.id
    ref_link = f"https://t.me/testymynebot_bot?start={user_id}"

    await update.message.reply_text(
        f"üîó –í–æ—Ç –≤–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
        f"<code>{ref_link}</code>\n\n"
        f"–ü–æ–¥–µ–ª–∏—Å—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø—Ä–∏–≤–ª–µ–∫–∞–π –±–æ–ª—å—à–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –≤ —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É!",
        parse_mode='HTML'
    )


# === –ö–æ–º–∞–Ω–¥–∞ /stats === 
async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ID –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö
    """
    user = update.effective_user
    user_id = str(user.id)

    referrals_count = database.count_referrals(user_id)

    message = (
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è @{user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}:</b>\n\n"
        f"üë§ –í–∞—à ID: <code>{user_id}</code>\n"
        f"üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{referrals_count}</b>\n\n"
        f"üîó –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /mylink, —á—Ç–æ–±—ã –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!"
    )

    await update.message.reply_text(message, parse_mode='HTML')


# === –ö–æ–º–∞–Ω–¥–∞ /top ===
async def top(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö
    """
    top_referrers = database.get_top_referrers(limit=10)

    if not top_referrers:
        await update.message.reply_text("üòî –ï—â—ë –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—à–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    message = "üèÜ <b>–¢–û–ü 10 –ê–ö–¢–ò–í–ù–´–• –†–ï–§–ï–†–ï–†–û–í:</b>\n\n"

    for idx, (referrer_id, count) in enumerate(top_referrers, start=1):
        word = "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        if count % 10 == 1 and count // 10 != 1:
            word = "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        elif 2 <= count % 10 <= 4 and count // 10 != 1:
            word = "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"

        message += f"{idx}. üßë‚Äçüíª ID: <code>{referrer_id}</code> ‚Äî {count} {word}\n"

    await update.message.reply_text(message, parse_mode='HTML')


# === –ö–æ–º–∞–Ω–¥–∞ /broadcast ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ===
async def broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –†–∞—Å—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç HTML-—Ä–∞–∑–º–µ—Ç–∫—É –∏ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    """
    user = update.effective_user
    user_id = str(user.id)

    if user_id != ADMIN_ID:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    if not context.args:
        await update.message.reply_text(
            "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /broadcast –∏–º—è_—Ñ–∞–π–ª–∞\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: /broadcast welcome.html"
        )
        return

    filename = context.args[0]

    if not os.path.exists(filename):
        await update.message.reply_text(f"‚ùå –§–∞–π–ª '{filename}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    try:
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        with open(filename, 'r', encoding='utf-8') as file:
            message_text = file.read()

        # === –ö–ù–û–ü–ö–ò –í –†–ê–°–°–´–õ–ö–ï ===
        keyboard = [
            [
                InlineKeyboardButton("üìπ –ü–ï–†–ï–ô–¢–ò ->", url="https://sovkomprohalva.ru"), 
                InlineKeyboardButton("üí¨ –ù–∞—à —á–∞—Ç", url="https://t.me/+Yaq7IZdTEWA3OWIy") 
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        users = database.get_all_users()
        success = 0
        failed = 0

        for db_user_id in users:
            try:
                await context.bot.send_message(
                    chat_id=db_user_id,
                    text=message_text,
                    parse_mode='HTML',
                    reply_markup=reply_markup
                )
                success += 1
            except Exception as e:
                print(f"[–û—à–∏–±–∫–∞] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {db_user_id}: {e}")
                failed += 1
            await asyncio.sleep(0.05)

        await update.message.reply_text(
            f"üì¨ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n‚úÖ –£—Å–ø–µ—à–Ω–æ: {success}\n‚ùå –û—à–∏–±–æ–∫: {failed}"
        )

    except Exception as e:
        await update.message.reply_text(f"üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")


# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ ===
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    """
    text = update.message.text

    if text == "üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞":
        await my_link(update, context)
    elif text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        await stats(update, context)
    elif text == "üèÜ –¢–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤":
        await top(update, context)
    elif text == "üåê –ü–ï–†–ï–ô–¢–ò":
        await update.message.reply_text("üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...", reply_markup=None)
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å WebAppInfo, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ


# === –û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Webhook ===
# === –û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Webhook ===
async def main():
    """
    –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ webhook
    """

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    database.init_db()

    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –º–µ–Ω—é Telegram
    commands = [
        BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand("mylink", "–ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É"),
        BotCommand("stats", "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"),
        BotCommand("top", "–†–µ–π—Ç–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤"),
        BotCommand("broadcast", "–†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)")
    ]
    await app.bot.set_my_commands(commands)

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("mylink", my_link))
    app.add_handler(CommandHandler("stats", stats))
    app.add_handler(CommandHandler("top", top))
    app.add_handler(CommandHandler("broadcast", broadcast))

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, button_handler))

    # === –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º webhook ===
    webhook_url = os.getenv("WEBHOOK_URL", "https://sovkomprohalva-bot.onrender.com ")
    port = int(os.getenv("PORT", "8000"))

    print(f"üåê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é webhook: {webhook_url}/webhook")

    await app.bot.set_webhook(f"{webhook_url}/webhook")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —á–µ—Ä–µ–∑ webhook
    await app.run_webhook(
        listen='0.0.0.0',           # –°–ª—É—à–∞–µ–º –≤—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        port=port,                  # –ü–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
        url_path="",                # –ü—É—Ç—å, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º
        webhook_url=f"{webhook_url}/webhook"  # URL –¥–ª—è Telegram
    )
    print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ Webhook")


# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è Render.com ===
if __name__ == '__main__':
    asyncio.run(main())
